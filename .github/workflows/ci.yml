name: Continuous Integration
on: [push, pull_request]
permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    name: Test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jest-project: ['unit', 'integration']
    env:
      NODE_ENV: test
      HOST_NAME: host
      DB_NAME: users
      DB_PASSWORD: postgres
      DB_USER: postgres
      DB_HOST: localhost
      DB_PORT: 5434
      LOG_LEVEL: debug
    steps:
      - name: Set Environment
        run: echo "DB_URL=$(echo postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME})" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Start Docker Compose
        if: ${{ matrix.jest-project == 'integration' }}
        run: docker-compose up -d users-db

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.0'

      - name: Install
        run: npm ci

      - name: Prisma Generate Types
        run: npx prisma generate

      - name: Prisma Deploy
        if: ${{ matrix.jest-project == 'integration' }}
        run: npx prisma migrate deploy

      - name: Test
        run: npx jest --selectProjects ${{ matrix.jest-project }} --coverage
        env:
          COVERAGE_REPORT_BASE_FILE_NAME: ${{ matrix.jest-project }}
          JEST_JUNIT_OUTPUT_NAME: ${{ matrix.jest-project }}
          JEST_JUNIT_OUTPUT_DIR: ${{ github.workspace }}/test-reports

      - name: Coverage Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/${{ matrix.jest-project }}.xml

      - name: Tests Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          reporter: 'jest-junit'
          name: Tests Results (${{ matrix.jest-project }})
          path: ${{ github.workspace }}/test-reports/${{ matrix.jest-project }}-*.xml
          list-tests: 'failed'
          fail-on-error: false

  upload-coverage:
    name: Upload Coverage Report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: omermorad/cheq-workshop
        with:
          name: codecov-umbrella
          flags: unit,integration
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: coverage
          files: ./coverage/unit.xml,./coverage/integration.xml
          verbose: true